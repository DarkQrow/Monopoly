// Generated by view binder compiler. Do not edit!
package com.CawCawStudio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.CawCawStudio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RegistryDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText datebirth;

  @NonNull
  public final EditText login;

  @NonNull
  public final LinearLayout loginDialog;

  @NonNull
  public final EditText password;

  @NonNull
  public final EditText username;

  private RegistryDialogBinding(@NonNull LinearLayout rootView, @NonNull EditText datebirth,
      @NonNull EditText login, @NonNull LinearLayout loginDialog, @NonNull EditText password,
      @NonNull EditText username) {
    this.rootView = rootView;
    this.datebirth = datebirth;
    this.login = login;
    this.loginDialog = loginDialog;
    this.password = password;
    this.username = username;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RegistryDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RegistryDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.registry_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RegistryDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.datebirth;
      EditText datebirth = ViewBindings.findChildViewById(rootView, id);
      if (datebirth == null) {
        break missingId;
      }

      id = R.id.login;
      EditText login = ViewBindings.findChildViewById(rootView, id);
      if (login == null) {
        break missingId;
      }

      LinearLayout loginDialog = (LinearLayout) rootView;

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.username;
      EditText username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new RegistryDialogBinding((LinearLayout) rootView, datebirth, login, loginDialog,
          password, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
